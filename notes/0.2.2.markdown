* Speedier coffee compiles using a shared compiler [#10][i10] { [stephenjudkins][stephenjudkins] }

If you've got `n` coffeescript source files, don't evaluate the coffeescript compiler `n` times, do it once per sbt session.

* Consider `icing` your coffee [#11][i11].

Is your plain vanilla coffeescript just not cutting it anymore. Try [iced coffee][iced] with support for better asyncronous primitives `await` and `defer`. I recommend checking out the comparisons to vanilla coffeescript in terms of how they react to change in requirements. The arguments are [pretty convincing][icedexample]. Enable this but changing the `CoffeeKeys` `iced` setting to true.

    (CoffeeKeys.iced in (Compile, CoffeeKeys.coffee)) := true

Note, iced coffeescript is a superset of coffeescript, meaning all of your coffeescript will work without change under the `iced` compiler. In iced mode, all `.coffee` and `.iced` files will get compiled using the `iced` compiler. You can revert back to standard coffeescript by leaving the `iced` setting as `false`. Only `.coffee` files will be compiled under the default coffee compiler, leaving you free to mix `ice` with your coffee safely.

[stephenjudkins]: https://github.com/stephenjudkins
[i10]: https://github.com/softprops/coffeescripted-sbt/pull/10
[i11]: https://github.com/softprops/coffeescripted-sbt/issues/11
[iced]: http://maxtaco.github.com/coffee-script/
[icedexample]: http://maxtaco.github.com/coffee-script/#iced
